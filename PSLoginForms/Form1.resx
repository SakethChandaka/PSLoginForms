<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>